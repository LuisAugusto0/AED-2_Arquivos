PUC-Minas - ICEI - Ciência da Computação
Arquitetura de Computadores I - Aula 2023-2_007
Anotações
___

Resumo da semana

Revisão

Métodos para simplificação tabular ( x.y+x.y' = x.(y+y') = x )

1. Mapa de Veitch-Karnaugh

   SoP( 0, 1, 2, 5, 6, 8,10,12,13,15 ) 
        
       
ab\cd 00 01 11 10
  00   1  1     1
  01      1     1
  11   1  1  1   
  10   1        1 

  
2. Método de Quine-McCluskey para mintermos

a.) Agrupar valores segundo 
    a quantidade de bits iguais a 1
    (para facilitar a identificação de grupos com dH=1)
    
Grupo com 0 bits = 1 -> {0}

00  0000 a'b'c'd'  [x]

Grupo com 1 bit  = 1 -> {1,2,8}

01  0001 a'b'c'd   [x][x]
02  0010 a'b'c d'  [x][x]
08  1000 a b'c'd'  [x][x]

Grupo com 2 bits = 1 -> {5,6,10,12}

05  0101 a'b c'd      [x][x] 
06  0110 a'b c d'     [x]
10  1010 a b'c d'     [x]
12  1100 a b c'd'     [x][x]

Grupo com 3 bits = 1 -> {13}

13  1101 a b c'd         [x][x]

Grupo com 4 bits = 1 -> {15}

15  1111 a b c d            [x]

b.) Formar pares com dH=1
    (testar valores de grupos vizinhos)

com valores nos grupos 0 e 1:

par ( 0, 1) = (0000, 0001) = 000_       Ga
par ( 0, 2) = (0000, 0010) = 00_0  [x]
par ( 0, 8) = (0000, 1000) = _000  [x]

com valores nos grupos 1 e 2:

par ( 1, 5) = (0001, 0101) = 0_01       Gb
par ( 2, 6) = (0010, 0110) = 0_10       Gc
par ( 2,10) = (0010, 1010) = _010  [x]
par ( 8,10) = (1000, 1010) = 10_0  [x]
par ( 8,12) = (1000, 1100) = 1_00       Gd

com valores nos grupos 2 e 3:

par ( 5,13) = (1101, 0101) = _101       Ge
par (12,13) = (1100, 1101) = 110_       Gf

com valores nos grupos 3 e 4:

par (13,15) = (1101, 1111) = 11_1       Gg

c.) Formar pares de pares com dH=1

par (( 0, 2), ( 8,10)) = ( 00_0, 10_0 )= _0_0      Gh
par (( 0, 8), ( 2,10)) = ( _000, _010 )= _0_0  [x]

Nota: Descartar o que não estiver em ordem.
      Parar, se não der para formar mais pares.
      
d.) Identificar os grupos remanescentes -> Gx

e.) Montar tabela com os grupos identificados

Gx  0  1  2  5  6  8 10 12 13 15 
Ga  x  x                          000_
Gb     x     x                    010_
Gc        x     x                 0_10
Gd                 x     x        1_00
Ge           x              x     _101
Gf                       x  x     110_
Gg                          x  x  11_1
Gh  x     x        x  x           _0_0
_________________________________
    2  2  2  2  1  2  1  2  3  1

f.) Identificar os grupos com apenas 1 ocorrência

Gx  0  1  2  5  6  8 10 12 13 15 
Ga  x  x                          000_
Gb     x     x                    010_
Gc        x     x                 0_10
Gd                 x     x        1_00
Ge           x              x     _101
Gf                       x  x     110_
Gg                          x  x  11_1
Gh  x     x        x  x           _0_0
_________________________________
    2  2  2  2  1  2  1  2  3  1
                ^     ^        ^

    Marcar termos restantes não essenciais ('o')
    
Gx  0  1  2  5  6  8 10 12 13 15
Ga  o  x                        
Gb  |  x     x                  
Gc  |     o    [x]                <= essenciais
Gd  |     |        o     x       
Ge  |     |  x     |        o    
Gf  |     |        |     x  o    
Gg  |     |        |        x [x] <= essenciais
Gh  x     o        x [x]          <= essenciais 
_________________________________
    2  2  2  2  1  2  1  2  3  1 
                ^     ^        ^
                
SoP = Gc + Gg + Gh + ...

g.) Filtrar os essenciais

Gx  0  1  2  5  6  8 10 12 13 15
Ga  o  x                           
Gb     x     x                    
Gd                 o     x        
Ge           x              o      
Gf                       x  o    
_________________________________
    1  2  0  2  0  1  0  2  2  0  

    Descartar grupos com termos não-essenciais
    
Gx  0  1  2  5  6  8 10 12 13 15
Ga  o  o                          <- descartar 
Gb     x     x                    <- selecionar
Gd           |     o     x        
Ge           o              o     <- descartar 
Gf                       x  o    
_________________________________
    1  1  0  1  0  1  0  2  2  0  
    
SoP = (Gc + Gg + Gh) + Gb + ...

h.) Filtrar os selecionados

Gx  0  1  2  5  6  8 10 12 13 15
Gd                 o     x        
Gf                       x  o    
_________________________________
    0  0  0  0  0  0  0  2  0  0 

Gx  0  1  2  5  6  8 10 12 13 15
Gd                 o     x        <- escolher arbitrariamente
Gf                       o  o     <- descartar
_________________________________
    0  0  0  0  0  0  0  1  0  0 
    
SoP = ((Gc + Gg + Gh) + Gb) + Gd

Nota:
    Para melhores escolhas,
    estabelecer critérios para filtrar.

h.) Síntese

SoP = (Gc  +  Gg  +  Gh)  +  Gb   +  Gd
    = 0_10 + 11_1 + _0_0  + 0_01  + 1_00
    = a'cd'+ abd  +  b'd' + a'c'd + ac'd'

      a'cd'+ abd  +  b'd' + a'c'd + ac'd'    (1)

      Pela álgebra de Boole ainda poderiam haver 
      mais simplificações,
      mas o método irá parar na expressão acima

      a'cd' + a'c'd  = a'.(c d'+c'd ) = a'.(c^d)  -> dH = 2
      a'cd' + a c'd' = d'.(a'c +a c') = d'.(a^c)  -> dH = 2

i.) Outra opção para selecionar grupos é aplicar 
    o Método de Petrick:
    
    Ga = 000_ = a'b'c'
    Gb = 010_ = a'b c'
    Gd = 1_00 = a c'd'
    Ge = _101 = b c'd
    Gf = 110_ = a b c'
    
    Construir um produto de somas das linhas 
    em que cada linha será adicionada e 
    as colunas serão usadas em conjunção:

    (Ga+Gb)(Gb+Ge)(Gd+Gf)(Ge+Gf) 

    Usar a propriedade distributiva para transformar 
    essa expressão em uma soma de produtos. 
    Aplicar equivalências para simplificar a expressão: 
    X + XY = X e XX = X e X+X=X
    
    (Ga+Gb)(Gb+Ge)(Gd+Gf)(Ge+Gf) 
    = (GaGb+GaGe+GbGb+GbGe)(GdGe+GdGf+GfGe+GfGf)
    = (GaGb+GaGe+Gb  +GbGe)(GdGe+GdGf+GfGe+Gf  )
    = (GaGb+GaGe+Gb.1+GbGe)(GdGe+GdGf+GfGe+Gf.1)
    = (Gb(Ga+1+Ge)+GaGe   )(Gf(Gd+Ge+1)+GdGe   )
    = (Gb         +GaGe   )(Gf         +GdGe   )
    =  GbGf + GbGdGe + GaGeGf + GaGdGe
    
    Escolher o(s) produto(s) com menos termos,
    e com o menor número de variáveis.    

    GbGf - é a escolha com o menor número de termos
    
    E aplicar essa escolha à expressão
    
SoP = (Gc + Gg + Gh) + Gb + Gf
    = 0_10 + 11_1 + _0_0  + 0_01  + 110_
    = a'cd'+ abd  +  b'd' + a'c'd + abc'

      a'cd'+ abd  +  b'd' + a'c'd + abc'  (2)

	Para comparar com a expressão obtida anteriormente:
	
      a'cd'+ abd  +  b'd' + a'c'd + ac'd' (1)

	Verifica-se que a escolha arbitrária (1), com (Gd), 
	ou a escolha feita mais acima (2), com (GbGf),
	(mais elaborada) conduzem a soluções equivalentes, 
	com o mesmo número de termos e variáveis. 
	A solução, portanto, não é única.

___    
___

Comparação dos resultados com os mapas de Veitch-Karnaugh

      a'cd' + abd  + b'd' + a'c'd + a c'd' +  [bc'd] 
                                             redundante
                                             
Mapa de Veitch-Karnaugh - Identificação de grupos

 Gc
 
ab\cd 00 01 11 10
 |00            1    a'cd'
 |01            1  
  11
  10

 Gg
 
ab\cd 00 01 11 10
  00             
  01             
  11|     1  1       abd
  10             
         _____    
  
 Gh
 
ab\cd 00 01 11 10
  00|  1        1
  01            
  11             
  10|  1        1    b'd'
      __       __
      
 Gb
         __
ab\cd 00 01 11 10
 |00      1          a'c'd
 |01      1     
  11             
  10             
  
 Gd
      __
ab\cd 00 01 11 10
  00             
  01            
 |11   1             ac'd'
 |10   1        
  
Unindo os grupos identificados

Gc+Gg    

ab\cd 00 01 11 10
  00            1    a'cd'+abd
  01            1
  11      1  1
  10

Gc+Gg+Gh
 
ab\cd 00 01 11 10
  00   1        1
  01            1    a'cd'+abd+b'd'
  11      1  1
  10   1        1 

Gc+Gg+Gh+Gb
 
ab\cd 00 01 11 10
  00   1  1     1
  01      1     1    a'cd'+abd+b'd'+a'c'd
  11      1  1
  10   1        1 

Gc+Gg+Gh+Gb+Gd = SoP = mVK

ab\cd 00 01 11 10
  00   1  1     1
  01      1     1  
  11   1  1  1       a'cd'+abd+b'd'+a'c'd+ac'd'
  10   1        1 

___
___

3. Método de Quine-McCluskey para MAXTERMOS

   SoP ( 0, 1, 2, 5, 6, 8,10,12,13,15) 
   PoS ( 3, 4, 7, 9,11,14)
         ^  ^  ^  ^  ^  ^
               
a.) Grupos de bits segundo a quantidade 
    de bits iguais a 0
    
Grupo com 1 bit  = 0 -> {7,11,14}
    
 7  0111 [x]
11  1011 [x]
14  1110      Ga

Grupo com 2 bits = 0 -> {3,9}
    
 3  0011 [x]
 9  1001 [x]

Grupo com 3 bits = 0 -> {4}
    
 4  0100      Gb
  
b.) Formar pares com dH=1

( 3, 7) = ( 0011, 0111 ) = 0_11  Gc
( 3,11) = ( 0011, 1011 ) = _011  Gd
( 9,11) = ( 1001, 1011 ) = 10_1  Ge

c.) Identificar os grupos remanescentes -> Gx

d.) Montar tabela com os grupos identificados

   3  4  7  9  11 14
Ga                 x  1110
Gb    x               0100
Gc x     x            0_11
Gd x            x     _011
Ge          x   x     10_1
   __________________
   2  1  1  1   2  1

   3  4  7  9  11 14
Ga                [x] <= essencial
Gb   [x]              <= essencial
Gc x    [x]           <= essencial
Gd o            o     <- descartar
Ge         [x]  x     <= essencial
   __________________
   1  1  1  1   1  1

e.) Síntese
 
PoS =      Ga      *     Gb     *    Gc     *    Ge
  
    =     1110     *    0100    *   0_11    *   10_1
    
PoS = (A'+B'+C'+D) * (A+B'+C+D) * (A+C'+D') * (A'+B+D')
 
___
 
Mapa de Veitch-Karnaugh - Identificação de grupos

 Gc
            __
AB\CD 00 01 11 10
 |00         0       (A+C'+D')    = Gc
 |01         0   
  11             
  10             

 Gc+Ge
 
AB\CD 00 01 11 10
  00         0       (A+C'+D')    = Gc
  01         0    
  11             
  10|     0  0       (A'+B+D')    = Ge
  
 Gc+Ge+Gb
      __ 
AB\CD 00 01 11 10
  00         0       (A+C'+D')    = Gc
 |01|  0     0       (A+B'+C+D)   = Gb
  11             
  10      0  0       (A'+B+D')    = Ge

 Gc+Ge+Gb+Ga
               __ 
AB\CD 00 01 11 10
  00         0       (A+C'+D')    = Gc
  01   0     0       (A+B'+C+D)   = Gb
 |11|           0    (A'+B'+C'+D) = Ga
  10      0  0       (A'+B+D')    = Ge

___

Exemplo 2:
                  inserção
                     v
 SoP( 0, 1, 2, 5, 6, 7, 8,10,12,13,15) 

 Grupos
 0 bits    1 bit     2 bits       3 bits    4 bits
 {0}       {1,2,8}   {5,6,10,12}  {7,13}    {15}
 0000 [x]  0001 [x]  0101 [x]     0111 [x]  1111 [x]
           0010 [x]  0110 [x]     1101 [x]
           1000 [x]  1010 [x]
                     1100 [x]

 Pares
   G5               G6               G7               G8
 (G0,G1)          (G1,G2)          (G2,G3)          (G3,G4)
 ( 0, 1)=000_ Ga  ( 1, 5)=0_01 Gb  ( 5,13)=_101 [x] (13,15)=11_1 [x]
 ( 0, 2)=00_0 [x] ( 2, 6)=0_10 Gc  (12,13)=110_ Ge
 ( 0, 8)=_000 [x] ( 2,10)=_010 [x]
                  ( 8,10)=10_0 [x] ( 5, 7)=01_1 [x] ( 7,15)=_111 [x]
                  ( 8,12)=1_00 Gd  ( 6, 7)=011_ Gf

 Pares de pares
   G9                                G10
 (G5,G6)                           (G7,G8)
 (( 0, 2),( 8,10))=_0_0 Gg         (( 5, 7),(13,15))=_1_1 Gh
 (( 0, 8),( 2,10))=_0_0 [x]        (( 5,13),( 7,15))=_1_1 [x]
   
 Nota: O método poderia prosseguir se fosse possível 
       agrupar G9 e G10 também.
         
 Montar e filtrar a tabela
    
Gx  0  1  2  5  6  7  8 10 12 13 15 
Ga  o  x                              000_
Gb     x     o                        0_01
Gc        o     x                     0_10
Gd                    o     x         1_00
Ge                          x  o      110_
Gf              x  o                  011_
Gg  x     x           x [x]           _0_0 <= essential
Gh           x     x           x [x]  _1_1 <= essencial
____________________________________
    2  2  2  2  2  2  2  1  2  2  1  
                                  ^
s1 = Gg + Gh + ...

Gx  0  1  2  5  6  7  8 10 12 13 15 
Ga  o  x                              <- escolha ( 1)
Gb     o     o                        <- descartar 
Gc        o     x                     <- escolha ( 6)
Gd                    o     x         <- escolha (12) 
Ge                          o  o      <- descartar
Gf              o  o                  <- descartar
___________________________________
    1  2  1  1  2  1  1  0  2  1  0  
                                  
s1 = Gh + Gg + Ga + Gc + Gd

   = _1_1  +  _0_0  +  000_   + 0_10  +  1_00
   
   =  b d  +   b'd' +  a'b'c' + a'cd' +  a c'd'
   
Nota: Pela álgebra de Boole ainda poderá haver simplificações,
      mas o método irá parar nesse ponto.

___
  
4. Método de Reed-Müller (dH=2 -> XOR, XNOR)

Circuitos combinacionais

                               s1    s0
n   m     M   a   b   a' b'  (a.b) (a^b)
0 a'.b' A +B  0   0   1  1     0     0
1 a'.b  A +B' 0   1   1  0     0     1
2 a .b  A'+B  1   0   0  1     0     1
3 a .b  A'+B' 1   1   0  0     1     0

              0 + 0         =  0     0
              0 + 1         =  0     1
              1 + 0         =  0     1
              1 + 1         =  1     0 
              
                              s1    s0
n    m        M     a  b  c    
0 a'.b'.c' A +B +C  0  0  0    0     0
1 a'.b'.c  A +B +C' 0  0  1    0     1
2 a'.b .c' A +B'+C  0  1  0    0     1
3 a'.b .c  A +B'+C' 0  1  1    1     0
4 a .b'.c' A'+B +C  1  0  0    0     1
5 a .b'.c  A'+B +C' 1  0  1    1     0
6 a .b .c' A'+B'+C  1  1  0    1     0
7 a .b .c  A'+B'+C' 1  1  1    1     1

                       3       5        6        7
s1 = SoP (3,5,6,7) = a'b c + a b'c  + a b c' + a b c

                       1       2        4        7
s0 = SoP (1,2,4,7) = a'b'c + a'b c' + a b'c' + a b c

Mapa VK

s1
ab\c  0  1
00        
01       1
11    1  1
10       1

simplificação/minimização: 

Ga = (3,7) = (011,111) = _11 = b c
Gb = (6,7) = (110,111) = 11_ = a b
Gc = (5,7) = (101,111) = 1_1 = a c

    3  5  6  7
Ga [x]       x
Gb       [x] x
Gc    [x]    x

s1 = Ga + Gb + Gc = b c + a b + a c

s0
ab\c  0  1
00       1
01    1   
11       1
10    1   

dH = 2 -> simplificação do tipo x.y+x.y' não se aplica

Entretanto, pela álgebra de Boole:

s0 = SoP (1,2,4,7) = a'b'c + a'b c' + a b'c' + a b c

                   = a'(b'c+b c')   + a(b'c'+b c)
                   
                   = a'(  b^c   )   + a(   b^c  )'                  
k = b^c
                   = a'    k        + a     k'
                   
                   =             a^k
k = b^c
                   =             a^(b^c)                   
                   
s0 = a ^ b ^ c

O mesmo se poderá encontrar usando os grupos nas diagonais:

(1,2) (001, 010) : (a'b'c +a'b c') = a'(b'c +b c') = a'(b^c)
(4,7) (100, 111) : (a b'c'+a b c ) = a (b'c'+b c ) = a (b^c)'

SoP(1,2,4,7) = a'(b^c) + a (b^c)'  = a^(b^c)

Na representação gráfica se poderá verificar que  os  vértices
(001 e 010) e (100 e 111) estão nas diagonais da face anterior
e da posterior do cubo, respectivamente. Ao mesmo tempo, estão 
nas diagonais (001 e 100) e (010 e 111) da face superior e  da
inferior. Assim  também  estão (001 e 111)  e  (010 e 100) nas 
faces à esquerda e à direita. Todas apresentam dH = 2.
 
         dH=1
    100 _______ 101
     /|         /| dH=1
  000_|_____ 001 |
   |  |       |  | 
   |110 ______|_111
   | /        | /  dH=1
  010 ______ 011
  
  
___
