PUC-Minas - ICEI - Ciência da Computação
Arquitetura de Computadores I - Aula 2023-2_013b

Anotações

___

Projeto (Síntese) de Máquinas de Estados Finitos

Mealy FSM Diagram - Identificador 1101
	             _____________________
	            /                     \
	      1     v    1           0   1 | // found
[start] ---> [id1] ---> [id11] ---> [id110]
   00          01         11          10 <- code
   ^ \0      0 |       1 / ^         0 | // not found
   \_/         /         \_/           |
    \_________/                        |
     \                                 |
      \_______________________________/

___
	  
Tabela de transições de estados

 ________________________________
|entrada |         saída         |
|   \    |           /           |
| atual  |        próximo        |
|________|_______________________|  
|      x |      0    |      1    |   x  = entrada
| d1 d2  |           |           |   d1 = flip-flop 1
|________|___________|___________|   d2 = flip-flop 2
|  0  0  |  0 0 / 0  |  0 1 / 0  |
|  0  1  |  0 0 / 0  |  1 1 / 0  |
|  1  1  |  1 0 / 0  |  1 1 / 0  |
|  1  0  |  0 0 / 0  |  0 1 / 1  |
            | |   |     | |   |   
            | |   |     | |   |      D1, D2 = variáveis = flip-flops
           D1 D2  s    D1 D2  s      s      = saída do circuito

___
		   
VK-Maps separados por variável
 _____________________________
|                   s         |
|_____________________________|
|       x |    0    |    1    |      x  = entrada
| d1 d2   |         |         |      d1 = flip-flop 1
|_________|_________|_________|      d2 = flip-flop 2
|  0  0   |    0    |    0    |
|  0  1   |    0    |    0    |
|  1  1   |    0    |    0    |
|  1  0   |    0    |    1    | <--- mintermo 5

s = SoP (5) = m(5) = 101 = d1.d2'.x

 _____________________________
|                  D1         |
|_____________________________|
|       x |    0    |    1    |      x  = entrada
| d1 d2   |         |         |      d1 = flip-flop 1
|_________|_________|_________|      d2 = flip-flop 2
|  0  0   |    0    |    0    |
|  0  1   |    0    |    1    | <--- mintermos 3 e 7
|  1  1   |    1    |    1    | <--- mintermos 6 e 7
|  1  0   |    0    |    0    |

D1 = SoP (3,6,7) = G(3,7) + G(6,7)
         G1            G2
   =(011 + 111)  + (110 + 111)
         G1            G2
   =    _11      +     11_
         G1            G2
   = ( d2 . x )  + ( d1 . d2 )

 _____________________________
|                  D2         |
|_____________________________|
|       x |    0    |    1    |      x  = entrada
| d1 d2   |         |         |      d1 = flip-flop 1
|_________|_________|_________|      d2 = flip-flop 2
|  0  0   |    0    |    1    |
|  0  1   |    0    |    1    | <--- mintermos 1,3,7,5
|  1  1   |    0    |    1    |
|  1  0   |    0    |    1    |

D2 = SoP (1,3,5,7) 
              G1
   = 001 + 011 + 101 + 111
   =   0 _ 1   +   1 _ 1
   =        _ _ 1
   =          x

Resumo

s  =   d1.d2'.x
D1 = ( d2 . x )  + ( d1 . d2 )
D2 =      x

___

Moore FSM Diagram - Identificador 1101
                            ________________________
                           /                        \
          1          1    v      0            1    1 | // found
[start] ---> [id1] ---> [id11] ---> [id110] ---> [id1101]
 0_00         0_01       0_11         0_10        1_00
  ^ \0        0 |      1 / ^           0 |         0 |
  \_/           /        \_/             |           |
   \___________/                         |           |
    \                                    |           |
     \___________________________________/           |
      \                                              |
       \____________________________________________/

___
	   
Tabela de transições de estados

  entrada             saída
    \                   /
  atual              próximo
|         x |      0    |      1    |   x  = entrada
|d1 d2 d3   |           |           |   d1 = flip-flop 1
|___________|___________|___________|   d2 = flip-flop 2
| 0  0  0   | 0 0 0 / 0 | 0 0 1 / 0 |   d3 = flip-flop 3
| 0  0  1   | 0 0 0 / 0 | 0 1 1 / 0 |
| 0  1  1   | 0 1 0 / 0 | 0 1 1 / 0 |
| 0  1  0   | 0 0 0 / 0 | 1 0 0 / 1 |
| 1  0  0   | 0 0 0 / 0 | 0 1 1 / 0 |
  ^           | | |   |   | | |   |
  |           | | |   |   | | |   |
  |          D1D2D3   s  D1D2D3   s     D1,D2,D3 = variáveis = flip-flops
  |_                                       s     = saída do circuito

VK-Map separados por variável

 ________________________________
|                      s         |
|________________________________|
|          x |    0    |    1    |      x  = entrada
| d1 d2 d3   |         |         |      d1 = flip-flop 1
|____________|_________|_________|      d2 = flip-flop 2
| 0  0  0    |    0    |    0    |      d3 = flip-flop 3
| 0  0  1    |    0    |    0    |
| 0  1  1    |    0    |    0    | 
| 0  1  0    |    0    |    1    | <--- mintermo 5
| 1  0  0    |    0    |    0    |

       G1
s = 0 1 0 1 = d1'. d2 . d3'. x   

OBS.: Haverá transição para o estado 100,
      cuja saída será tomada como resultado,
      pois se encontra codificada nesse estado. 

 ________________________________
|                     D1         |
|________________________________|
|          x |    0    |    1    |      x  = entrada
| d1 d2 d3   |         |         |      d1 = flip-flop 1
|____________|_________|_________|      d2 = flip-flop 2
| 0  0  0    |    0    |    0    |      d3 = flip-flop 3
| 0  0  1    |    0    |    0    |
| 0  1  1    |    0    |    0    |
| 0  1  0    |    0    |    1    | <--- mintermo 5
| 1  0  0    |    0    |    0    |

        G1
D1 = 0 1 0 1  =>  d1 = s (saída codificada no estado)
        G1
D1 = d1'. d2 . d3' . x

 ________________________________
|                     D2         |
|________________________________|
|          x |    0    |    1    |      x  = entrada
| d1 d2 d3   |         |         |      d1 = flip-flop 1
|____________|_________|_________|      d2 = flip-flop 2
|  0  0  0   |    0    |    0    |      d3 = flip-flop 3
|  0  0  1   |    0    |    1    | <--- mintermos 3 e 7
|  0  1  1   |    1    |    1    | <--- mintermos 6 e 7
|  0  1  0   |    0    |    0    |
|  1  0  0   |    0    |    1    | <--- mintermo  9

        G1            G2         G3
D2 = 0011 + 0111 + 0110 + 0111 + 1001
        G1            G2         G3
   =   0_11      +   011_      + 1001
        G1            G2         G3

D2 = (d1'.d3.x) + (d1'.d2.d3) + (d1.d2'.d3'.x )

 ________________________________
|                     D3         |
|________________________________|      x  = entrada
|          x |    0    |    1    |      d1 = flip-flop 1
| d1 d2 d3   |         |         |      d2 = flip-flop 2
|____________|_________|_________|      d3 = flip-flop 3
|  0  0  0   |    0    |    1    | <--- mintermos 1 e 3
|  0  0  1   |    0    |    1    | <--- mintermos 3 e 7
|  0  1  1   |    0    |    1    |
|  0  1  0   |    0    |    0    |
|  1  0  0   |    0    |    1    | <--- mintermos 1 e 9

          G1              G2              G3
D3 = (0001 + 0011) + (0011 + 0111) + (0001 + 1001) 
          G1              G2              G3
   =    00_1       +     0_11      +     _001
          G1              G2              G3
   = (d1'.d2'.x)   + (d1'.d3.x)    +  (d2'.d3'.x)


Resumo

s  =  d1'.d2 .d3'. x
D1 =      d2'.d3'. x
D2 = (d1'.d3 .x) + (d1'.d2.d3) + (d1.d2'.d3'.x ) 
D3 = (d1'.d2'.x) + (d1'.d3.x ) + (d1.d2'.d3'.x )
   
    
----------------------------------------------------------------
----------------------------------------------------------------

Contadores crescentes

1. FFD_0_1230 - Contador crescente (módulo 4)
                CT4 = ( CT4+1 ) % 4

Síncrono (evento x = entrada c + clock)

     Diagrama de estados

            c=1
c=0 |> 00 ------> 01 <| 0
        ^          |
    c=1 |          | c=1
        |          v
c=0 |> 11 <------ 10 <| 0
            c=1

  Estado        Estado
  Atual Evento Seguinte   Tabelas de Transições
  (em t)       (em t+1) 
   a  b    c     a  b       Da         Db
0  0  0    0     0  0        0          0
1  0  0    1     0  1        0          1
2  0  1    0     0  1        0          1
3  0  1    1     1  0        1          0
4  1  0    0     1  0        1          0
5  1  0    1     1  1        1          1
6  1  1    0     1  1        1          1
7  1  1    1     0  0        0          0

Da = SoP(3,4,5,6)         Db = SoP(1,2,5,6)

Da                        Db      
ab\c 0 1                  Db\c 0 1
00                        00     1
01     1                  01   1
11   1                    11   1
10   1 1                  10     1

Da=ac'+ab'+a'bc           Db=b c'+b'c
                                           a     b     c
                                           |     |     |
  CLK                 +--------------------+     |     |
     -----------------|-----+                    |     |
        |  _______    |     |  _______           |     |
        | |       |   |     | |       |          |     |
        | |    Qa |---|     | |    Qb |----------+     |
        +-|>      |   |     +-|>      |          |     |
        +-| D  Qa'|-- |     +-| D  Qb'|-+        |     |
        | |  1 0  | | |     | |  1 0  | |        |     |
        | |_______| | |     | |_______| |        |     |
  CLR   |      |    | |     |      |    |        |     |
     ---|------+----|-|-----|------+    |        |     |
        +-----+     | |     +-----+     |        |     |
  a'bc+ab'+ac'|     | |  bc'+b'c  |     |        |     |
           ___|___  | |        ___|___  |        |     |
    +-----|       | | |   +---|       | |        |     |
    | +---|  >=1  | | |   |   |  >=1  | |        |     |
    | | +-|       | | |   | +-|       | |        |     |
    | | | |_______| | |   | | |_______| |        |     |
    | | |           | |   | |           |        |     |
    | | |  _______  | |   | |  _______  |        |     |
    | | | |       |-|-+ a | | |       | | b      |     |
    | | +-|   &   |-|-+-+ | +-|   &   |-|--------+     |
    | |a'c|       | | | | |   |       |-|-----+  |     |
    | |   |_______| | | | |   |_______| | c'  |  |     |
    | |             | | +-|-------------|-----+--|-o<|-+
    | |    _______  | |   |    _______  |        |     |
    | |   |       | | |   |   |       | | b'     |     |
    | +---|   &   |-|-+ a +---|   &   |-+        |     |
    | ab' |       |-|---+     |       |-|--------|-----+
    |     |_______| |   | b'  |_______| | c      |     |
    |               |   +---------------+        |     |
    |      _______  |                            |     |
    |a'bc |       |-+ a'                         |     |
    +-----|   &   |------------------------------+ b   |
          |       |------------------------------------+
          |_______|   c                                      
 
___

2. FFJK_0_1230 - Contador crescente módulo 4

Síncrono (evento x = entrada c + clock)

     Diagrama de estados

            c=1
c=0 |> 00 ------> 01 <| 0
        ^          |
    c=1 |          | c=1
        |          v
c=0 |> 11 <------ 10 <| 0
            c=1

OBS.:
      Cada estado (xx) será codificado por (ab),
      valores armazenados/saídas de registradores
      (flip-flops). 
      A entrada será dada pela ocorrência do 
      evento (c). 

   Entradas Saída
   em t=0
m  a  b  c   
0  0  0  0   0 <- partir de   0
1  0  0  1   1 <- contar +1 = 1
2  0  1  0   0
3  0  1  1   1 <- contar +1 = 2
4  1  0  0   0
5  1  0  1   1 <- contar +1 = 3
6  1  1  0   0
7  1  1  1   0 <- contar +1 = 0 (módulo 4)

   Estado    Estado    Transições  
   atual    seguinte   de estados
   (em t)   (em t+1) antes   depois
m  a  b  c   a  b        evento
0  0  0  0   0  0  // 00 - 0 -> 00
1  0  0  1   0  1  // 00 - 1 -> 01
2  0  1  0   0  1  // 01 - 0 -> 01
3  0  1  1   1  0  // 01 - 1 -> 10
4  1  0  0   1  0  // 10 - 0 -> 10
5  1  0  1   1  1  // 10 - 1 -> 11
6  1  1  0   1  1  // 11 - 0 -> 11
7  1  1  1   0  0  // 11 - 1 -> 00

Separar cada entrada (atual -> seguinte) para flip-flop distinto

  (t) (t+1)
m  a   a    Ja Ka
0  0   0     0  0  // hold
1  0   0     0  0  // hold            
2  0   0     0  0  // hold
3  0   1     1  0  // set             
4  1   1     0  0  // hold
5  1   1     0  0  // hold
6  1   1     0  0  // hold
7  1   0     0  1  // reset

  (t) (t+1)
m  b   b    Jb Kb
0  0   0     0  0  // hold
1  0   1     1  0  // set             
2  1   1     0  0  // hold
3  1   0     0  1  // reset
4  0   0     0  0  // hold            
5  0   1     1  0  // set
6  1   1     0  0  // hold
7  1   0     0  1  // reset

Resumo

  Estado Evento Estado
  atual        seguinte  Tabelas de Transições
  (em t)       (em t+1) 
m  a  b     c    a  b    Ja Ka           Jb Kb
0  0  0     0    0  0     0  0 - hold    0  0  - hold
1  0  0     1    0  1     0  0 - hold    1  0  - set
2  0  1     0    0  1     0  0 - hold    0  0  - hold
3  0  1     1    1  0     1  0 - set     0  1  - reset
4  1  0     0    1  0     0  0 - hold    0  0  - hold
5  1  0     1    1  1     0  0 - hold    1  0  - set
6  1  1     0    1  1     0  0 - hold    0  0  - hold
7  1  1     1    0  0     0  1 - reset   0  1  - reset

Ja = SoP(3)  Ka = SoP(7)  Jb = SoP(1,5) Kb = SoP(3,7)

ab\c 0 1     ab\c 0 1     ab\c 0 1     ab\c 0 1
00           00           00     1     00
01     1     01           01           01     1
11           11     1     11           11     1
10           10           10     1     10
Ja           Ka           Jb           Kb

Ja=a'b c     Ka=a b c     Jb=  b'c     Kb=  b c

                                        a  b  c
                                        |  |  |
  CLK                 +-----------------+  |  |
     ---+-------------|-----+              |  |
        |  _______    |     |  _______     |  |
        | |       |   | b'c | |       |    |  |
      +-|-| Ja Qa |---|   +-|-| Jb Qb |----+  |
      | +-|>      |   |   | +-|>      |    |  |
      | +-| Ka Qa'|-+ |   | +-| Kb Qb'|-+  |  |
      | | |  1 0  | | |   | | |  1 0  | |  |  |
      | | |_______| | |   | | |_______| |  |  |
  CLR | |      |    | |   | | bc   |    |  |  |
     -|-|------+----|-|---|--------+    |  |  |
      | |           | |   | |           |  |  |
      | |  _______  | |   | |  _______  |  |  |
      | | |       |-|-+ a | | |       |-+b'|  |
      | +-|   &   | |     +-|-|   &   |  b |  |
      |abc|       |-|-------+ |       |----|--+
      |   |_______| | bc    | |_______|    |c |
      |    _______  |       |  _______     |  |
      |   |       |-+ a'    | |       |  b |  |
      +---|   &   |         +-|   &   |----+  |
     a'bc |       |---------+ |       |-------+
          |_______|   bc      |_______| c

OBS.:
      Caso seja considerada a possibilidade de substituição
      de set/reset pelo uso de "toggle", o projeto pode ser
      revisto para incluir outros termos que, eventualmente,
      poderão levar a equações mais simples.

  Estado Evento Estado
  atual        seguinte  Tabelas de Transições
  (em t)       (em t+1)
   a  b    c     a  b    Ja Ka           Jb Kb
0  0  0    0     0  0     0  0 - hold    0  0  - hold
1  0  0    1     0  1     0  0 - hold    1  1  - toggle
2  0  1    0     0  1     0  0 - hold    0  0  - hold
3  0  1    1     1  0     1  1 - toggle  1  1  - toggle
4  1  0    0     1  0     0  0 - hold    0  0  - hold
5  1  0    1     1  1     0  0 - hold    1  1  - toggle
6  1  1    0     1  1     0  0 - hold    0  0  - hold
7  1  1    1     0  0     1  1 - toggle  1  1  - toggle

Ja=SoP(3,7)  Ka=SoP(3,7)  Jb=SoP(1,3,5,7) Kb=SoP(1,3,5,7)

ab\c 0 1     ab\c 0 1     ab\c 0 1        ab\c 0 1
00           00           00     1        00     1
01     1     01     1     01     1        01     1
11     1     11     1     11     1        11     1
10           10           10     1        10     1
Ja           Ka           Jb              Kb

Ja= b c      Ka= b c      Jb= c           Kb= c

                                         a  b  c
                                         |  |  |
                       +-----------------+  |  |
         +-------------|---+-+--------------|--+ x=c
         |  _______    |   | |  _______     |  |
         | |       |   |   | | |       |    |  |
       +-|-| Ja Qa |---+   +-|-| Jb Qb |----+  |
       | +-|>      |       | +-|>      |    |  |
       +---| Ka Qa'|       +---| Kb Qb'|    |  |
       |   |  1 0  |           |  1 0  |    |  |
       |   |_______|           |_______|    |  |
  CLR  |       |                    |       |  |
      -|-------+--------------------+       |  |
       |                        _______     |  |
       |                       |       | b  |  |
       ------------------------|   &   |----+  |
                               |       |-------+
                               |_______| c

___
                                
3. FFT_0_1230 - Contador crescente (módulo 4)

Síncrono (evento x = entrada c + clock)

     Diagrama de estados

            c=1
c=0 |> 00 ------> 01 <| 0
        ^          |
    c=1 |          | c=1
        |          v
c=0 |> 11 <------ 10 <| 0
            c=1

  Estado Evento Estado
  atual        seguinte     Tabelas de Transições
  (em t)       (em t+1)
   a  b    c     a  b       Ta         Tb
0  0  0    0     0  0        0 - hold   0 - hold
1  0  0    1     0  1        0 - hold   1 - toggle
2  0  1    0     0  1        0 - hold   0 - hold
3  0  1    1     1  0        1 - toggle 1 - toggle
4  1  0    0     1  0        0 - hold   0 - hold
5  1  0    1     1  1        0 - hold   1 - toggle
6  1  1    0     1  1        0 - hold   0 - hold
7  1  1    1     0  0        1 - toggle 1 - toggle

Ta=SoP(3,7)               Tb=SoP(1,3,5,7)

ab\c 0 1                  ab\c 0 1
00                        00     1
01     1                  01     1
11     1                  11     1
10                        10     1
Ta                        Tb

Ta= b c                   Tb = c

___

4. FFSR_0_1230 - Contador crescente (módulo 4)

Síncrono (evento x = entrada c + clock)

     Diagrama de estados

            c=1
c=0 |> 00 ------> 01 <| 0
        ^          |
    c=1 |          | c=1
        |          v
c=0 |> 11 <------ 10 <| 0
            c=1

  Estado Evento Estado
  atual        seguinte  Tabelas de Transições
  (em t)       (em t+1)
   a  b    c     a  b    Sa Ra         Sb Rb
0  0  0    0     0  0     0  0 - hold  0  0  - hold
1  0  0    1     0  1     0  0 - hold  1  0  - set
2  0  1    0     0  1     0  0 - hold  0  0  - hold
3  0  1    1     1  0     1  0 - set   0  1  - reset
4  1  0    0     1  0     0  0 - hold  0  0  - hold
5  1  0    1     1  1     0  0 - hold  1  0  - set
6  1  1    0     1  1     0  0 - hold  0  0  - hold
7  1  1    1     0  0     0  1 - reset 0  1  - reset

Sa=SoP(3)    Ra=SoP(7)    Sb=SoP(1,3)  Rb=SoP(3,7)

ab\c 0 1     ab\c 0 1     ab\c 0 1     ab\c 0 1
00           00           00     1     00
01     1     01           01           01     1
11           11     1     11           11     1
10           10           10     1     10
Sa           Ra           Sb           Rb

Sa=a'b c     Ra=a b c     Sb=  b'c     Rb=  b c

___

5. FFJK_0_1230 - Contador crescente (módulo 4)

Assíncrono (evento x = entrada c = controle)

     Diagrama de estados

            c=1
c=0 |> 00 ------> 01 <| 0
        ^          |
    c=1 |          | c=1
        |          v
c=0 |> 11 <------ 00 <| 0
            c=1

  Estado Evento Estado
  atual        seguinte  Tabelas de Transições
  (em t)       (em t+1)
   a  b    c     a  b    Ja Ka           ca  cb   Jb Kb
0  0  0    0     0  0 __  1  1 - toggle   0   0    1  1  - toggle
1  0  0    1     0  1 _-  1  1 - toggle   0   1    1  1  - toggle
2  0  1    0  __ 0  1 --  1  1 - toggle   0   0    1  1  - toggle
3  0  1    1  _- 1  0 -_  1  1 - toggle   1   1    1  1  - toggle
4  1  0    0     1  0 __  1  1 - toggle   0   0    1  1  - toggle
5  1  0    1     1  1 _-  1  1 - toggle   0   1    1  1  - toggle
6  1  1    0  -- 1  1 --  1  1 - toggle   0   0    1  1  - toggle
7  1  1    1  -_ 0  0 -_  1  1 - toggle   1   1    1  1  - toggle

OBS.: O FF_JK(a) deverá fazer a troca ("toogle")
      quando o FF_JK(b) fizer a troca de 1->0,
      ou seja, quando a saída b = 0 (Qb' = 1).
      Portanto, se ambos os FF_JK estão em modo
      de troca ("toogle"), o FF_JK(a) deverá
      receber como entrada de clock o sinal
      Qb' do FF_JK(b).
                                         a  b  c
    1 -+-------------------+             |  |  |
       |               +---|-------------+  |  |
       |               | +-|----------------|--+ x=c
       |    _______    | | |    _______     |  |
       |   |       |   | | |   |       |    |  |
       +---| Ja Qa |---+ | +---| Jb Qb |----+  |
       | +-|>      |     +-|---|>      |       |
       +-|-| Ka Qa'|       +---| Kb Qb'|-+     |
         | |  1 0  |           |  1 0  | |     |
         | |_______|           |_______| |     |
  CLR    |      |                   |    |     |
      ---|------+-------------------+    |     |
         +-------------------------------+     |

___

Contadores decrescentes

6. FFD_0_3210 - Contador decrescente (módulo 4)
                CT4 = ( CT4+3 ) % 4

Síncrono (evento x = entrada c + clock)

     Diagrama de estados

            c=1
c=0 |> 00 <------ 01 <| 0
        |          ^
    c=1 |          | c=1
        v          |
c=0 |> 11 ------> 10 <| 0
            c=1

  Estado        Estado
  Atual Evento Seguinte   Tabelas de Transições
  (em t)       (em t+1) 
   a  b    c     a  b       Da         Db
0  0  0    0     0  0        0          0
1  0  0    1     1  1        1          1
2  0  1    0     0  1        0          1
3  0  1    1     0  0        0          0
4  1  0    0     1  0        1          0
5  1  0    1     0  1        0          1
6  1  1    0     1  1        1          1
7  1  1    1     1  0        1          0

Da = SoP(1,4,6,7)         Db = SoP(1,2,5,6)

Da                        Db      
ab\c 0 1                  Db\c 0 1
00     1                  00     1
01                        01   1
11   1 1                  11   1
10   1                    10     1

Da=ac'+ab+a'b'c           Db=b c'+b'c

___

7. FFJK_0_3210 - Contador decrescente (módulo 4)
                CT4 = ( CT4+3 ) % 4

Síncrono (evento x = entrada c + clock)

     Diagrama de estados

            c=1
c=0 |> 00 <------ 01 <| 0
        |          ^
    c=1 |          | c=1
        v          |
c=0 |> 11 ------> 10 <| 0
            c=1

  Estado Evento Estado
  atual        seguinte  Tabelas de Transições
  (em t)       (em t+1)
   a  b    c     a  b    Ja Ka        Jb Kb
0  0  0    0     0  0     0  0 - hold  0  0  - hold
1  0  0    1     1  1     1  0 - set   1  0  - set
2  0  1    0     0  1     0  0 - hold  0  0  - hold
3  0  1    1     0  0     0  0 - hold  0  1  - reset
4  1  0    0     1  0     0  0 - hold  0  0  - hold
5  1  0    1     0  1     0  1 - reset 1  0  - set
6  1  1    0     1  1     0  0 - hold  0  0  - hold
7  1  1    1     1  0     0  0 - hold  0  1  - reset

Ja=SoP(1)    Ka=SoP(5)    Jb=SoP(1,5)  Kb=SoP(3,7)

Ja           Ka           Jb           Kb
ab\c 0 1     ab\c 0 1     ab\c 0 1     ab\c 0 1
00     1     00           00     1     00
01           01           01           01     1
11           11           11           11     1
10           10     1     10     1     10
Ja           Ka           Jb           Kb

Ja=a'b'c     Ka= a b'c    Jb=b'c       Kb=  b c

___

8. FFSR_0_3210 - Contador decrescente (módulo 4)

Assíncrono (evento x = c = controle)

     Diagrama de estados

            c=1
c=0 |> 00 <------ 01 <| 0
        |          ^
    c=1 |          | c=1
        v          |
c=0 |> 11 ------> 10 <| 0
            c=1

  Estado Evento Estado
  atual        seguinte  Tabelas de Transições
  (em t)       (em t+1)
   a  b    c     a  b    Ja Ka           ca  cb   Jb Kb
0  0  0    0     0  0     1  1 - toggle   0   0    1  1  - toggle
1  0  0    1  -> 1  1 <-  1  1 - toggle   1   1    1  1  - toggle
2  0  1    0     0  1     1  1 - toggle   0   0    1  1  - toggle
3  0  1    1  -> 0  0 <-  1  1 - toggle   0   1    1  1  - toggle
4  1  0    0     1  0     1  1 - toggle   0   0    1  1  - toggle
5  1  0    1  -> 0  1 <-  1  1 - toggle   1   1    1  1  - toggle
6  1  1    0     1  1     1  1 - toggle   0   0    1  1  - toggle
7  1  1    1  -> 1  0 <-  1  1 - toggle   1   1    1  1  - toggle

OBS.: O FF_JK(a) deverá fazer a troca ("toogle")
      quando o FF_JK(b) fizer a troca de 0->1,
      ou seja, quando a saída b = 1 (Qb' = 0).
      Portanto, se ambos os FF_JK estão em modo
      de troca ("toogle"), o FF_JK(a) deverá
      receber como entrada de clock o sinal
      Qb do FF_JK(b).

                                         a  b  c
    1 -+-------------------+             |  |  |
       |               +---|-------------+  |  |
       |               | +-|----------------|--+ x=c
       |    _______    | | |    _______     |  |
       |   |       |   | | |   |       |    |  |
       +---| Ja Qa |---+ | +---| Jb Qb |----+  |
       | +-|>      |     +-|---|>      |    |  |
       +-|-| Ka Qa'|       +---| Kb Qb'|    |  |
         | |  1 0  |           |  1 0  |    |  |
         | |_______|           |_______|    |  |
  CLR    |     |                    |       |  |
      ---|-----+--------------------+       |  |
         +----------------------------------+  |


___

