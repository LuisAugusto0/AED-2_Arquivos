PUC-Minas - ICEI - Ciência da Computação
Arquitetura de Computadores I - Aula 2023-2_010
Anotações
___

Resumo da semana

Máquina de Estados Finitos (FSM - Finite State Machine)
ou
Autômatos Finitos


Tipos

- detectores/reconhecedores ({0:1} ou {false:true}}
- transdutores: Mealy, Moore
- classificadores           ({a,b,c,d,e})
- sequenciadores/geradores

___

Exemplo: Reconhecedor de sequência 1101

1. FSM

   estado  entrada             estado  entrada
           0     1                     0     1
    >q0    q0    q1             *000   000   001
     q1    q0    q2              001   000   010
     q2    q3    q2              010   011   010
     q3    q0    q4#             011   000   100+

   Matriz de estados/transições
   
   atual\próximo
         q0 q1 q2 q3 q4
     q0   0  1         
     q1   0     1      
     q2         1  0   
     q3   0          1      
     q4              + 
     
     
2. Mealy 

   estado  entrada; saída       estado entrada; saída
           0     1                     0     1
    >q0    q0;0  q1;0           *000   000 0 001 0
     q1    q0;0  q2;0            001   000 0 010 0
     q2    q3;0  q2;0            010   011 0 010 0
     q3    q0;0  q0;1            011   000 0 000 1
                                           ^     ^
    bit separado = saída __________________|_____|
 
   Matriz de estados/transições (entrada; saída)
   
   atual\próximo
         q0   q1  q2  q3  q4 
     q0  0;0  1;0            
     q1  0;0      1;0        
     q2           1;0 0;0    
     q3  0;0              1;1
     q4                   + 

     
3. Moore 

   estado  entrada;saída       estado  [saída]entrada
           0     1                        0      1
    *q0    q0;0  q1;0          *0000   [0]000 [0]001
     q1    q0;0  q2;0           0001   [0]000 [0]010
     q2    q3;0  q2;0           0010   [0]011 [0]010
     q3    q0;0  q4;0           0011   [0]000 [1]100
     q4    q4;1  q4;1           1100   [1]100 [1]100
                                ^       ^      ^
     primeiro bit = saída ______|_______|______|

   Matriz de estados/transições
   
   atual\próximo
         q0   q1  q2  q3  q4 
     q0  0;0  1;0            
     q1  0;0      1;0        
     q2           1;0 0;0    
     q3  0;0              1;0
     q4                   _;1+ 

                                             
4. Autômato de Pilha  (PDA - PushDown Automata)

   estado entrada  pop  push  próximo    Z   = pilha vazia
    *000     0      Z     Z     000     pop  = desempilhar
     000     1      Z     0     001     push = empilhar
     001     0      0     Z     000
     001     1      0     0     010     OBS: pop (Z) = Z
     010     0      0     0     011          push(Z) = Z
     010     1      0     0     010
     011     0      0     Z     000
     011     1      0     1     100+
    
    Dica: É melhor usar o indicador de pilha vazia (Z)
          do que o indicador lambda, para se evitar o
          não-determinismo.

   Matriz de estados/transições
   
         q0     q1    q2    q3    q4   
     q0  0;Z;Z  1;Z;0                  
     q1  0;0;Z        1;0;0            
     q2               1;0;0 0;0;0      
     q3  0;0;Z                    1;0;1
     q4                           +    

    
5. Máquina  de Turing (TM  - Turing Machine)

   estado entrada saída movimento próximo  codificação de movimentos
    *000     0      0    01  (R)    000    00 = N = não fazer nada
     000     1      0    01  (R)    001    01 = R = para a direita
     001     0      0    01  (R)    000    10 = L = para a esquerda
     001     1      0    01  (R)    010    11 = S = parar
     010     0      0    01  (R)    011
     010     1      0    01  (R)    010
     011     0      0    01  (R)    000
     011     1      1    11+ (S)    100+
     
     OBS.: Na descrição acima optou-se por usar a saída
           lógica (0=false; 1=true). Poderia também ser
           usada a saída como cópia, e parar ao encontrar.
     
   Matriz de estados/transições
   
         q0     q1    q2    q3    q4   
     q0  0;0;R  1;0;R                  
     q1  0;0;R        1;0;R            
     q2               1;0;R 0;0;R      
     q3  0;0;R                    1;1;S
     q4                           +    
 
     OBS.: Não há codificação para a ausência de dados ([])
           ou para valores fora do alfabeto (x),
           no exemplo acima, mas deverá ser feita.
           No momento, se não houver dados, irá parar.
 
   Codificação mais completa 
   para incluir erro no alfabeto ou fim dos dados
   
   estado entrada saída movimento próximo  
    *000     0      0    01  (R)    000  
     000     1      0    01  (R)    001  
     000     x      x    11  (S)    000  
     000     #      #    11  (S)    000
     
     001     0      0    01  (R)    000  
     001     1      0    01  (R)    010  
     001     x      x    11  (S)    001  
     001     #      #    11  (S)    001  

     010     0      0    01  (R)    011
     010     1      0    01  (R)    010
     010     x      x    11  (S)    010  
     010     #      #    11  (S)    010  

     011     0      0    01  (R)    000
     011     1      1    11+ (S)    100
     011     x      x    11  (S)    011  
     011     #      #    11  (S)    011  
   
___
